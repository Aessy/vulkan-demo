#version 460
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_debug_printf : enable

layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout(rgba32f, set = 0, binding = 0) writeonly uniform image3D depthOutput;

struct LightBufferData
{
    vec3 position;
    vec3 light_color;
    float strength;
};

layout(set = 1, binding = 0) uniform UniformWorld{
    mat4 view;
    mat4 proj;
    vec3 pos;
    LightBufferData light;
} world;

layout(set = 2, binding = 0) uniform UniformFog{
    uint enabled;
    float density;
    float max_density;
    vec3 color;
    float turbulence;
    float wind;
    float time;
} fog;

void main()
{
    ivec3 voxelCoord = ivec3(gl_GlobalInvocationID.xyz);

    vec2 fog_pos;
    fog_pos.x = float(voxelCoord.x)/128.0f;
    fog_pos.y = float(voxelCoord.y)/128.0f;

    vec2 noise_coord = fog_pos + (fog.wind * fog.time);

    //float noise_value = texture(noise_texture, noise_coord).r * fog.turbulence;
    float noise_value = fog.density;


    imageStore(depthOutput, voxelCoord, vec4(fog.density+noise_value, 0.0, 0.0, 0.0));
}
